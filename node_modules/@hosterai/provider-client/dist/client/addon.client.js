"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddonClient = void 0;
class AddonClient {
    constructor(axios, api_url, service_provider_token) {
        this.axios = axios;
        this.api_url = api_url;
        this.service_provider_token = service_provider_token;
    }
    create(addon) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request("POST", "/service-providers/addons", addon);
        });
    }
    update(name, addon) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request("PUT", "/service-providers/addons/" + name, addon);
        });
    }
    delete(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request("DELETE", "/service-providers/addons/" + name);
        });
    }
    get(name) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request("GET", "/service-providers/addons/" + name);
        });
    }
    request(method, endpoint, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.axios
                .request({
                method,
                url: this.api_url + endpoint,
                data,
                headers: {
                    Authorization: "Bearer " + this.service_provider_token,
                },
            })
                .then((res) => res.data)
                .catch((err) => err.response.data);
        });
    }
}
exports.AddonClient = AddonClient;
